{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:42:38.815851+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:42:38.815851+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "h3iyyK2pDQCR0Ws3ACNusg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "GraphQL offers an extensible way to work with remote models."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-09T08:50:22.715505+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:42:38.817496+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5o5TpWapDQCeyNW/D5MB7Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "You can browse the schema in the browser here:[Objects](https://docs.github.com/en/graphql/reference/objects), but that is far from the rest of the development environment."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-09T09:21:34.367915+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-09T10:55:53.082059+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "cbjYFGepDQCeziNVD5MB7Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's take a look at how at an alternative: browse the schema inside the development."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "veit.heller@feenk.com"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-11-09T08:04:01.278355+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "veit.heller@feenk.com"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2022-11-15T13:36:20.514531+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "tDmK/2WpDQCewlRQD5MB7Q=="
							},
							"code" : "aContext := GtGQLContext new\n\t\turl: 'https://api.github.com/graphql';\n\t\tbearerToken: (FileLocator home / '.secrets' / 'home-github.txt') contents trimBoth;\n\t\tbuildSchema"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-09T10:55:54.147718+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:50:48.005051+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "DeUxZmipDQCOkr6gD5MB7Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First, we get the schema and construct a local model of it that we store in a context variable. For example, here we take the [schema from GitHub](https://api.github.com/graphql). Besides the URL we also need to specify the API access key. In this example, it is stores in `.secrets` in the home directory:"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:50:55.685728+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:51:20.236314+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "8DA45q2pDQCR2lOCACNusg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Inspecting the resulting context offers a way to navigate and learn about the schema."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:44:00.444253+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:51:30.028541+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "IAKJza2pDQCR2G9gACNusg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Of course, we want to use GraphQL for actually querying data. For this we can use the dedicated snippet as below. The snippet needs to be specified the GraphQL context. This happens through the dropdown from which you can point to the variable from the current page that holds that context object. In our case it is `aContext`."
			},
			{
				"__type" : "GraphQL",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:51:41.958624+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T21:51:41.958624+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "BjIS6a2pDQCR3I4HACNusg=="
				},
				"operation" : "query Repository($ownername: String!, $name: String!) {\n\trepository(owner: $ownername, name: $name) {\n\t\turl\n\t\tdescription\n\t}\n}",
				"input" : "{\n\t\"ownername\": \"feenkcom\",\n\t\"name\": \"gtoolkit\"\n}",
				"context" : "aContext",
				"resultVariableName" : ""
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T22:24:03.706074+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-12T22:24:38.00942+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "dhvpZmipDQCOlAzbD5MB7Q=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Notice how the snippet offers completion. This is based on the schema, like expected from a typical GraphQL editor."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:53:10.4127+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:54:20.917629+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nG2aUg6qDQC7zPz+DaKgQw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Paginating through the repositories of an organization"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:54:23.04485+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:56:06.475725+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "IzWRUw6qDQC7zrgsDaKgQw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Playing with an individual query is nice, but we typically want to use the query within a larger computation. One such situation is to have a widget that shows the list of some results."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:56:09.037848+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:02:57.762326+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "k5vaXA6qDQC70rFtDaKgQw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "A concrete example is to get all repositories of an organization. We can get an initial list with a query like this:"
			},
			{
				"__type" : "GraphQL",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:53:29.391429+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T16:53:29.391429+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ainMUw6qDQC70GizDaKgQw=="
				},
				"operation" : "query Repositories($count: Int!, $login: String!, $after: String, $privacy: RepositoryPrivacy) {\n\torganization (login: $login) {\n\t\tname\n\t\turl\n\t\trepositories(first: $count, after: $after, privacy: $privacy) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tname\n\t\t\t\t\turl\n\t\t\t\t\tforks {\n\t\t\t\t\t\ttotalCount } } }\n\t\t\tpageInfo {\n\t\t\t\thasPreviousPage\n\t\t\t\thasNextPage\n\t\t\t\tstartCursor\n\t\t\t\tendCursor } } } }",
				"input" : "{ \n\t\"count\" : 5,\n\t\"login\" : \"feenkcom\", \n\t\"after\" : null, \n\t\"privacy\" : \"PUBLIC\" }",
				"context" : "aContext",
				"resultVariableName" : "repositoriesQuery"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:03:02.55824+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:06:03.922558+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "1YzpdQ6qDQC71i/dDaKgQw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "For the sake of argument, we limited the batch to 5 repositories. Of course, we want more. We want all repositories. For this, we use a [[Pharo Snippet]] that makes use a generic utility that knows how to paginate through GraphQL and that essentially behaves like a stream:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:02:26.928725+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:15:45.872616+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "c1TWcw6qDQC71F7gDaKgQw=="
				},
				"code" : "repositoriesQuery paginator\n\tcursorInputName: #after;\n\tconnectorPath: #(organization repositories);\n\titemsName: #edges;\n\tcollect: [ :each | each at: #node ] "
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:05:11.360943+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "veit.heller@feenk.com"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2022-11-17T17:06:55.611427+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "+wKUfQ6qDQC73OpvDaKgQw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Inspecting the above script shows an inspector in which the repositories are loaded in batches of `5`. Scrolling through the list prompts the paginator to load more."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "veit.heller@feenk.com"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-11-09T07:52:29.312673+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "veit.heller@feenk.com"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2022-11-11T23:01:35.619687+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Exploring GitHub through GraphQL "
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "28aa4bd6-65a9-0d00-9eb8-3ce90f9301ed"
	}
}