{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:09:46.266967+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:10:39.436397+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "OPh0MUCzDQCqs3ZEAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We continue to script the grammar rules of [[SPL]] in the [[PetitParser SPL case study]]. We show how to debug the rules with simple test cases."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:09:34.026241+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:09:45.875387+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KDK6MECzDQCqh4uqAovPuA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#TL;DR"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:11:46.955605+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:13:46.676955+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "6YemOECzDQCuavPFAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We incrementally implement the rules of the  SPL grammar, continuing with expressions."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:34:52.344775+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:35:07.240633+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "M+M5i0CzDQC14/ixAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We start with incomplete rules, so we can test them bit by bit."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:32:41.895397+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:33:25.612224+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "TWFzg0CzDQC1dB8KAovPuA=="
							},
							"code" : "integer := #digit asPParser plus , $. asPParser not.\rfloat := $- asPParser optional , #digit asPParser plus , $. asPParser\r\t\t, #digit asPParser plus.\rnumber := integer / float.\rboolean := 'true' asPParser / 'false' asPParser.\r\rprimary := boolean / number .\t\"incomplete\"\runary := primary.\t\"incomplete\"\rfactor := unary , ($/ asPParser / $* asPParser , unary) star."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:35:17.206435+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:35:45.691191+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "gD+1jECzDQC3IyqCAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We can (manually) test the `factor` rule so far as follows:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:11:50.62466+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:21:40.000992+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "C4LeOECzDQCuc/sVAovPuA=="
							},
							"code" : "factor end parse: '2*6/12'."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:36:45.516375+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:37:05.661088+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "y7/4kUCzDQC7ugv5AovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Note that we apply `end` to the `factor` parser so we test that all the input is consumed."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:35:50.144567+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:36:35.091905+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1NerjkCzDQC4T/AjAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "When we later extract a class from our parser script, we can turn out test scripts into proper regression tests using example methods."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:36:35.425039+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:37:13.214007+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "zMVekUCzDQC7b2xAAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Suppose we try the following:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:19:55.476538+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:34:07.819622+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "tsTEVUCzDQCzaiV6AovPuA=="
							},
							"code" : "factor end parse: '2*3+6'."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:37:14.956986+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:39:21.583773+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "ZPq5k0CzDQC9zMkcAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Clearly this will fail. You can inspect the Execution Traces view, and walk through it. If you click and explore the Stream State view of each Debug Result object in the execution trace, you can walk through and see exactly where the parse has failed."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:10:41.740214+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:11:46.360175+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/WfDNECzDQCt8ZxtAovPuA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Debugging expressions"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:40:24.376522+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:42:01.863917+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "M0sEn0CzDQCEtTx9AovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "After a few iterations we will need to define recursive rules. As shown in [[Parsing with PetitParser2]], this can be done in a script by first defining a rule as an instance of {{gtClass:name=PP2UnresolvedNode}}, and then redefining it with `def:`, as follows:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:42:04.406249+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:44:49.420158+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "7576pECzDQCJ3rsVAovPuA=="
							},
							"code" : "integer := #digit asPParser plus , $. asPParser not.\rfloat := $- asPParser optional , #digit asPParser plus , $. asPParser\r\t\t, #digit asPParser plus.\rnumber := integer / float.\rboolean := 'true' asPParser / 'false' asPParser.\r\rprimary := boolean / number.\t\"incomplete\"\runary := PP2UnresolvedNode new.\t\"recursive\"\rnegatedUnary := $! asPParser / $- asPParser , unary.\runary def: negatedUnary / primary.\r"
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:43:48.242996+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:46:16.627447+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Wgcrq0CzDQCKR7S/AovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Note how we first defined `unary` as an unresolved parser node, and then redefined it recursively after it was used to define `negatedUnary`."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:43:52.766257+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:47:46.628712+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "jA9wq0CzDQCKTGQ+AovPuA=="
							},
							"code" : "unary end parse: '-3.14'."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:39:50.85283+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:40:23.995297+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zcIEnUCzDQCEUiuuAovPuA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Recursive rules"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:47:59.526667+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:48:40.622986+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "glIlukCzDQCO5FVtAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "So far so good, but we cannot parse input with unexpected whitespace. This fails."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:48:30.600586+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:48:49.295+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "vXn/u0CzDQCQWf8rAovPuA=="
							},
							"code" : "unary end parse: '-3.14 '."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:48:50.906745+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:49:15.440769+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "fFA1vUCzDQCQtspFAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We can apply `trim` to each parser that may be surrounded by whitespace."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:49:17.219539+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:34.578532+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "1NPGvkCzDQCSWbyoAovPuA=="
							},
							"code" : "integer := #digit asPParser plus , $. asPParser not trim.\rfloat := $- asPParser optional , #digit asPParser plus , $. asPParser\r\t\t, #digit asPParser plus trim.\rnumber := integer / float.\rboolean := 'true' asPParser trim / 'false' asPParser trim.\r\rprimary := boolean / number.\runary := PP2UnresolvedNode new.\rnegatedUnary := $! asPParser / $- asPParser , unary.\runary def: negatedUnary / primary."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:36.102352+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:42.752831+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "fnx6w0CzDQCTCxLpAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Now the test case passes."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:44.460623+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:47.696954+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "SwX6w0CzDQCTjJhOAovPuA=="
							},
							"code" : "unary end parse: '-3.14 '."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:47:50.377768+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:47:58.448855+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "G354uUCzDQCOKfSTAovPuA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Trimming whitespace"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:50:59.702745+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:51:40.473831+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "yZrixECzDQCT+Mb5AovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "We would also like to consider `// ...` style comments to be whitespace. In order to handle this, we should define our own whitespace rule:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:51:42.250992+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:51:52.26294+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "z9Rrx0CzDQCXBpnSAovPuA=="
							},
							"code" : "comment := '//' asPParser , #newline asPParser negate star.\nignorable := (comment / #space asPParser) star."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:51:53.44495+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:52:24.969071+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "a6MWyECzDQCXIsQXAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "And now, instead of applying `trim`, we apply `trim: ignorable` wherever we allow comments or whitespace to be ignored."
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:52:26.855454+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:56:55.335906+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "eXAUykCzDQCZhJbfAovPuA=="
							},
							"code" : "comment := '//' asPParser , #newline asPParser negate star.\nignorable := (comment / #space asPParser) star.\rinteger := #digit asPParser plus , $. asPParser not trim: ignorable.\rfloat := $- asPParser optional , #digit asPParser plus , $. asPParser\n\t\t, #digit asPParser plus trim: ignorable.\rnumber := integer / float.\rboolean := ('true' asPParser trim: ignorable)\n\t\t/ ('false' asPParser trim: ignorable).\r\rprimary := boolean / number.\runary := PP2UnresolvedNode new.\rnegatedUnary := $! asPParser / $- asPParser , unary.\runary def: negatedUnary / primary."
						},
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:46:22.375859+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:53:19.864758+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "Mu1atECzDQCNve3MAovPuA=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "Now we can handle comments in expressions:"
						},
						{
							"__type" : "pharoSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:53:21.518727+01:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2023-03-14T17:53:34.107723+01:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "iIlWzUCzDQCagsOgAovPuA=="
							},
							"code" : "unary end parse: '-3.14 // a negative pi'."
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:50:50.062541+01:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2023-03-14T17:50:58.499272+01:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "rYBPxECzDQCTlYAAAovPuA=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "#Trimming comments"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-03-14T17:09:33.993813+01:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2023-03-14T17:09:33.993813+01:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Debugging SPL grammar rules"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "ebb2b930-40b3-0d00-aa86-cad9028bcfb8"
	}
}