{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T21:20:16.687565+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T22:57:54.977495+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "rDdwu4PRDQCTYwlVA/u8ww=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "First, we identify the windows that contain a debugger. We do this by finding the spaces that have a {{gtClass:GtMoldableDebugger}} somewhere in their rendering tree:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T21:20:08.778156+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T22:56:53.649654+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "nQAyu4PRDQCTU5HgA/u8ww=="
				},
				"code" : "debuggerSpaces := BlSpace allInstances\r\t\tselect: [ :each | (each root query // GtMoldableDebugger) isNotEmpty ]."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T21:21:37.255776+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T22:58:02.695609+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "GRB4wIPRDQCUw4JjA/u8ww=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Once we have those spaces, we can simply close them:"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T21:15:23.61263+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2024-04-02T22:56:58.7264+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "LMIyqoPRDQCPzzs/A/u8ww=="
				},
				"code" : "debuggerSpaces do: [ :each | each close ]"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-04-02T21:18:09.53158+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2024-04-02T22:59:56.75955+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "How to close all open debugger windows"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "aabe32aa-83d1-0d00-8fce-0de503fbbcc3"
	}
}